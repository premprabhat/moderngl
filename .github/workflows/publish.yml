name: publish

on:
  workflow_dispatch:

jobs:

  sdist:
    name: sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: deps
        run: python -m pip install -U pip wheel setuptools

      - name: sdist
        run: python setup.py sdist

      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: "dist/*.tar.gz"

  wheel:
    name: wheel
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10.0-rc.2']
        architecture: [x64, x86]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86

    steps:
      - uses: actions/checkout@v2

      - name: setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: deps
        run: python -m pip install -U auditwheel pip wheel setuptools

      - name: wheel
        run: python setup.py bdist_wheel

      - name: auditwheel
        if: contains(matrix.os, 'ubuntu')
        run: |
          mv dist temp
          python -m auditwheel repair -w dist temp/*-linux_x86_64.whl

      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: "dist/*.whl"

  wheel_aarch64:
    name: wheels for aarch64
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39, cp310-310]
      fail-fast: false
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      
      - name: Build wheel
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            python -m pip install -U auditwheel pip wheel setuptools && \
            python setup.py bdist_wheel && \
            mv dist temp && \
            python -m auditwheel repair -w dist temp/*_aarch64.whl && \
            deactivate'

      - name: list
        run: |
          ls -l dist/

      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: "dist/*.whl"

  publish:
    name: publish
    needs:
      - sdist
      - wheel
      - wheel_aarch64
    runs-on: ubuntu-latest

    steps:
      - name: setup
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: deps
        run: python -m pip install -U twine

      - name: download
        uses: actions/download-artifact@v2

      - name: upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        # run: python -m twine upload dist/*
        run: ls dist/*
